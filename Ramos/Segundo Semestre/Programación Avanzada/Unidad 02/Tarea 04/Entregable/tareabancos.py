# -*- coding: utf-8 -*-
"""TareaBancos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/115RPmS9NyqPVBKDeZwmB8tdUUyEfeFmY
"""

import warnings
warnings.filterwarnings("ignore", category=UserWarning)

"""#Ejercicio de Pandas:

Usa los dos archivos csv de la carpeta para completar las tareas que aparecen en negrita a continuación, responder sólo en la línea que aparece.

**Usar una celda de código**

Importar pandas and leer el archivo banklist.csv en una estructura de dataframe llamada bancos.
"""

import pandas as pd
bancos = pd.read_csv('/content/banklist.csv')

"""**Muestre las 10 primeras filas del dataframe**"""

bancos.head(10)

"""**Imprima el nombre de las columnas**"""

# Imprimir los nombres de las columnas de bancos
print(bancos.columns.tolist())

"""**Obtener una lista o matriz de todos los estados en el conjunto de datos, sin repetición, ordenados de la A a la Z**"""

# Obtener la lista de estados únicos, ordenados alfabéticamente
estados = sorted(bancos['ST'].unique())

# Mostrar todos los estados en el conjunto de datos
print(estados)

"""**¿Cuáles son los 5 estados con más bancos fallidos?**"""

# Contar la cantidad de bancos fallidos por estado y ordenar en orden descendente
estados_mas = bancos['ST'].value_counts().head(5)

# Mostrar los 5 estados con más bancos fallidos
print(estados_mas)

"""**¿Cuáles son las 5 principales instituciones adquirentes?**"""

# Contar la cantidad de adquisiciones por cada institución y ordenar en orden descendente
adquirentes5 = bancos['Acquiring Institution'].value_counts().head(6).tail(5) # La primera es sin adquirientes, por lo que se quita

# Mostrar las 5 principales instituciones adquirentes
print(adquirentes5)

"""**¿Cuántos bancos ha adquirido el State Bank of Texas? ¿Cuántos de ellos estaban realmente en Texas?**"""

# Filtrar los bancos adquiridos por el 'State Bank of Texas'
adquiridos_sbt = bancos[bancos['Acquiring Institution'] == 'State Bank of Texas']

# Contar el número total de adquisiciones
total = adquiridos_sbt.shape[0]

# Filtrar por aquellos que estaban en el estado de Texas
en_texas = adquiridos_sbt[adquiridos_sbt['ST'] == 'TX'].shape[0]

# Mostrar los resultados
print(f"Total de bancos adquiridos por el State Bank of Texas: {total}")
print(f"Bancos adquiridos que estaban en Texas: {en_texas}")

"""**¿Cuál es la ciudad más común en California donde un banco quiebra?**"""

# Filtrar los bancos que están en California (estado 'CA')
bancos_california = bancos[bancos['ST'] == 'CA']

# Encontrar la ciudad más común y cuántos bancos han quebrado allí
ciudad_mas_comun = bancos_california['City'].value_counts().idxmax()
cantidad_en_ciudad = bancos_california['City'].value_counts().max()

# Mostrar la ciudad más común y la cantidad de bancos que han quebrado allí
print(f"La ciudad más común en California donde un banco quiebra es: {ciudad_mas_comun}")
print(f"Número de bancos que han quebrado en {ciudad_mas_comun}: {cantidad_en_ciudad}")

"""**¿Cuántos nombres de bancos comienzan con la letra 's'?**"""

# Filtrar los nombres de bancos que comienzan con la letra 'S'
bancos_con_s = bancos[bancos['Bank Name'].str.startswith('S')]

# Contar cuántos bancos comienzan con la letra 'S'
cantidad_bancos_con_s = bancos_con_s.shape[0]

# Mostrar el resultado
print(f"El número de bancos cuyos nombres comienzan con la letra 'S' es: {cantidad_bancos_con_s}")

"""**¿Cuántos bancos consisten en dos palabras? Ej. "First Bank" , "Bank Georgia"**"""

# Contar cuántos bancos tienen nombres que consisten en dos palabras
bancos_dos_palabras = bancos['Bank Name'].str.split().apply(len) == 2

# Contar el número de bancos que cumplen con la condición
cantidad = bancos_dos_palabras.sum()

# Mostrar el resultado
print(f"El número de bancos cuyos nombres consisten en dos palabras es: {cantidad}")

"""**¿Cuántos bancos quebrados no tienen la palabra "Banco" en su nombre?**"""

# Filtrar los bancos cuyos nombres no contienen la palabra 'Banco'
bancos_sin_banco = bancos[~bancos['Bank Name'].str.contains('Banco', case=False)]

# Cual es el que tiene 'Banco' en su nombre
bancos_con_banco = bancos[bancos['Bank Name'].str.contains('Banco', case=False)]
bancos_con_banco = bancos_con_banco['Bank Name'].str.cat(sep=', ')

# Contar el número de bancos que no tienen la palabra 'Banco' en su nombre
cantidad_sin_banco = bancos_sin_banco.shape[0]

# Mostrar el resultado
print(f"El número de bancos quebrados que no tienen la palabra 'Banco' en su nombre es: {cantidad_sin_banco}")

# Mostrar el nombre del que si tiene 'Banco'
print(f"El nombre del que si tiene 'Banco' en su nombre es: {bancos_con_banco}")

"""**¿Cuántos bancos cerraron en el año 2008?**"""

# Convertir la columna 'Closing Date' a formato datetime
bancos['Closing Date'] = pd.to_datetime(bancos['Closing Date'])

# Filtrar los bancos que cerraron en el año 2008
bancos_2008 = bancos[bancos['Closing Date'].dt.year == 2008]

# Contar el número de bancos que cerraron en 2008
cantidad_2008 = bancos_2008.shape[0]

# Mostrar el resultado
print(f"El número de bancos que cerraron en 2008 es: {cantidad_2008}")